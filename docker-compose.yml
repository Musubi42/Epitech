version: '3'
services:
  poll:
    build: ./poll
    container_name: epitechPopeyePoll
    depends_on:
      - redis
    environment:
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - PORT=80
    ports:
      - 4201:80
    networks:
      - poll-tier
    restart: unless-stopped


  result: 
    build: ./result
    container_name: epitechPopeyeResult
    environment:
      - DB_HOSTNAME=${DB_HOSTNAME}
    depends_on:
      - db
    ports:
      - 4202:80
    networks:
      - result-tier
    restart: unless-stopped


  worker:
    build: ./worker
    container_name: epitechPopeyeWorker
    links:
      - redis
      - db
    depends_on:
      - redis
      - db
    restart: unless-stopped
    environment:
      - DB_HOSTNAME=${DB_HOSTNAME}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      # - REDIS_HOSTS=local:redis:6379
    networks:
      - back-tier
    ports:
      - 4203:80


  redis:
    image: "redis:alpine"
    container_name: epitechPopeyeRedis
    environment:
      - POLL_HOSTNAME=${POLL_HOSTNAME}
      - WORKER_HOSTNAME=${WORKER_HOSTNAME}
    ports: 
      - 6379
    networks:
      - poll-tier
      - back-tier
    restart: unless-stopped


  db:
    image: postgres:9
    container_name: epitechPopeyePG
    environment:
      - WORKER_HOSTNAME=${WORKER_HOSTNAME}
      - RESULT_HOSTNAME=${RESULT_HOSTNAME}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - db-data:/usr/share/db
    expose:
      - 5432
    networks:
      - result-tier
      - back-tier
    restart: unless-stopped


  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: epitechPopeyePgadmin
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   volumes:
  #     - pgadmin-data:/var/lib/pgadmin/
  #   depends_on:
  #     - db
  #   links:
  #     - db
  #   ports:
  #     - "5050:80"
  #   restart: unless-stopped


volumes:
  db-data:
    driver: local

networks:
  poll-tier:
    driver: bridge
  result-tier:
    driver: bridge
  back-tier:
    driver: bridge
